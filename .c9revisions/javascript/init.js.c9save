{"ts":1359774714548,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"$(function () {\r\n    //var client = io.connect(window.location.host);\r\n\tvar client = io.connect(':4005');\r\n\tclient.username = null;\r\n\tclient.user_id = Math.ceil(Math.random()*999999);\r\n\tclient.activeProject = 0;\r\n\tclient.project = {\t// default map and project settings\r\n\t\tlist: [0],\r\n\t\tinfo: [{\r\n\t\t\tproject_name: null,\r\n\t\t\tsynced: false,\r\n\t\t\tusername: null,\r\n\t\t\tcenter: new google.maps.LatLng(5.353521355337423, -387.0703125),\r\n\t\t\tzoom: 3,\r\n\t\t\tbasemap: \"day\",\r\n\t\t}],\r\n        data: {\r\n\t\t\twizardFieldNames: ['project_name', 'project_desc','project_admin','project_tag'],\r\n\t\t\teditableFieldsLabels: [{\r\n\t\t\t\tmarkers: \"\",\r\n\t\t\t\tpolylines: \"\",\r\n\t\t\t\tpolygons: \"\"\r\n\t\t\t}],\r\n            editableFields: [{\r\n                markers: ['Marker Attribute 1', 'Marker Attribute 2'],\r\n                polylines: ['PolyLine Attribute 1', 'PolyLine Attribute 2'],\r\n                polygons: ['Polygon Attribue 1', 'Polygon Attribute 2']\r\n            }]\r\n        }\r\n    };\r\n\t\r\n\t\r\n\tclient.features = []; // project feature container\r\n\tclient.featureQueue = []; // feature queued for projects recieved en mass.\r\n\t\r\n\t// Editor globals\r\n\tclient.isTyping = false;\r\n    client.isEditing = false;\r\n\tclient.mapViewSynced = false;\r\n    client.hasTouch = Modernizr.touch;\r\n    client.editorData = {\r\n        currentTool: null,\r\n        markers: [],\r\n        lines: [],\r\n        lineShapes: [],\r\n        polygons: [],\r\n        polyShapes: [],\r\n        infoWindows: [],\r\n        editEvent: {}\r\n    };\r\n\tvar app = $('body'); // Typing detection\r\n\tapp.on('client_typing',function(event, isTyping){\r\n        if(isTyping){\r\n            client.isTyping = true;\r\n            return;\r\n        } else if (!isTyping){\r\n            client.isTyping = false;\r\n            return;\r\n        } else {\r\n            // do nothing\r\n        }\r\n    });\r\n\t// Tools and useful stuff\r\n\tclient.tools = {\r\n\t\ttoggleLoadingIcon: function(){\r\n\t        if ($('#loadingIcon').length > 0){\r\n\t                $('#loadingIcon').remove();\r\n\t            return;\r\n\t        } else {\r\n\t        var loadingIcon = $('<img />')\r\n\t            .attr('id', 'loadingIcon')\r\n\t            .attr('src', 'images/loading.gif')\r\n\t            .appendTo($('body'))\r\n\t            .show();\r\n\t            return loadingIcon;\r\n\t        }\r\n\t    },\r\n\t\tcenterElement: function(selectedElement) {\r\n\t\t    var doc = $(document);\r\n\t\t    var x = doc.width() / 2 - selectedElement.width() / 2 - (parseInt(selectedElement.css(\"padding\"), 10) / 2),\r\n\t\t        y = doc.height() / 2 - selectedElement.height() / 2 - (parseInt(selectedElement.css(\"padding\"), 10) / 2);\r\n\r\n\t\t    selectedElement.css({\r\n\t\t        position: \"absolute\",\r\n\t\t        left: x,\r\n\t\t        top: y\r\n\t\t    });\r\n\t\t},\r\n\t\turlArgs: function(url) {\r\n\t        var args = {};\r\n\t        var query;\r\n\t        var i;\r\n\t        if (url) {\r\n\t            i = url.indexOf('?');\r\n\t            query = url.substring(i).substring(1);\r\n\t        } else {\r\n\t            query = location.search.substring(1);\r\n\t        }\r\n\t        var pairs = query.split(\"&\");\r\n\t        for (i = 0; i < pairs.length; i++) {\r\n\t            var pos = pairs[i].indexOf('=');\r\n\t            if (pos == -1) continue;\r\n\t            var name = pairs[i].substring(0, pos);\r\n\t            var value = pairs[i].substring(pos + 1);\r\n\t            value = decodeURIComponent(value);\r\n\t            args[name] = value;\r\n\t        }\r\n\t        return args;\r\n\t    }\r\n\t};\r\n\r\n\tclient.tools.toggleLoadingIcon(); // Show loading icon\r\n    var query = client.tools.urlArgs(); // Url Queries as an object\r\n\r\n\tclient.on('connect', function () {\r\n        client.tools.toggleLoadingIcon(); // Hide loading icon\r\n\t\tclient.emit('login',{\r\n\t\t\tusername: query.username || \"example@example.com\"\r\n\t\t})\r\n\r\n    });\r\n});\t\t"]],"start1":0,"start2":0,"length1":0,"length2":3714}]],"length":3714}
{"contributors":[],"silentsave":false,"ts":1359774734820,"patch":[[{"diffs":[[0,"    "],[-1,"//var client = io.connect(window.location.host);\r\n\tvar client = io.connect(':4005');\r\n\tclient.username = null;\r\n\tclient.user_id = Math.ceil(Math.random()*999999);\r\n\tclient.activeProject = 0;\r\n\tclient.project = {\t// default map and project settings\r\n\t\tlist: [0],\r\n\t\tinfo: [{\r\n\t\t\tproject_name: null,\r\n\t\t\tsynced: false,\r\n\t\t\tusername: null,\r\n\t\t\tcenter: new google.maps.LatLng(5.353521355337423, -387.0703125),\r\n\t\t\tzoom: 3,\r\n\t\t\tbasemap: \"day\",\r\n\t\t}],\r\n        data: {\r\n\t\t\twizardFieldNames: ['project_name', 'project_desc','project_admin','project_tag'],\r\n\t\t\teditableFieldsLabels: [{\r\n\t\t\t\tmarkers: \"\",\r\n\t\t\t\tpolylines: \"\",\r\n\t\t\t\tpolygons: \"\"\r\n\t\t\t}],\r\n            editableFields: [{\r\n                markers: ['Marker Attribute 1', 'Marker Attribute 2'],\r\n                polylines: ['PolyLine Attribute 1', 'PolyLine Attribute 2'],\r\n                polygons: ['Polygon Attribue 1', 'Polygon Attribute 2']\r\n            }]\r\n        }\r\n    };\r\n\t\r\n\t\r\n\tclient.features = []; // project feature container\r\n\tclient.featureQueue = []; // feature queued for projects recieved en mass.\r\n\t\r\n\t// Editor globals\r\n\tclient.isTyping = false;\r\n    client.isEditing = false;\r\n\tclient.mapViewSynced = false;\r\n    client.hasTouch = Modernizr.touch;\r\n    client.editorData = {\r\n        currentTool: null,\r\n        markers: [],\r\n        lines: [],\r\n        lineShapes: [],\r\n        polygons: [],\r\n        polyShapes: [],\r\n        infoWindows: [],\r\n        editEvent: {}\r\n    };\r\n\tvar app = $('body'); // Typing detection\r\n\tapp.on('client_typing',function(event, isTyping){\r\n        if(isTyping){\r\n            client.isTyping = true;\r\n            return;\r\n        } else if (!isTyping){\r\n            client.isTyping = false;\r\n            return;\r\n        } else {\r\n            // do nothing\r\n        }\r\n    });\r\n\t// Tools and useful stuff\r\n\tclient.tools = {\r\n\t\ttoggleLoadingIcon: function(){\r\n\t        if ($('#loadingIcon').length > 0){\r\n\t                $('#loadingIcon').remove();\r\n\t            return;\r\n\t        } else {\r\n\t        var loadingIcon = $('<img />')\r\n\t            .attr('id', 'loadingIcon')\r\n\t            .attr('src', 'images/loading.gif')\r\n\t            .appendTo($('body'))\r\n\t            .show();\r\n\t            return loadingIcon;\r\n\t        }\r\n\t    },\r\n\t\tcenterElement: function(selectedElement) {\r\n\t\t    var doc = $(document);\r\n\t\t    var x = doc.width() / 2 - selectedElement.width() / 2 - (parseInt(selectedElement.css(\"padding\"), 10) / 2),\r\n\t\t        y = doc.height() / 2 - selectedElement.height() / 2 - (parseInt(selectedElement.css(\"padding\"), 10) / 2);\r\n\r\n\t\t    selectedElement.css({\r\n\t\t        position: \"absolute\",\r\n\t\t        left: x,\r\n\t\t        top: y\r\n\t\t    });\r\n\t\t},\r\n\t\turlArgs: function(url) {\r\n\t        var args = {};\r\n\t        var query;\r\n\t        var i;\r\n\t        if (url) {\r\n\t            i = url.indexOf('?');\r\n\t            query = url.substring(i).substring(1);\r\n\t        } else {\r\n\t            query = location.search.substring(1);\r\n\t        }\r\n\t        var pairs = query.split(\"&\");\r\n\t        for (i = 0; i < pairs.length; i++) {\r\n\t            var pos = pairs[i].indexOf('=');\r\n\t            if (pos == -1) continue;\r\n\t            var name = pairs[i].substring(0, pos);\r\n\t            var value = pairs[i].substring(pos + 1);\r\n\t            value = decodeURIComponent(value);\r\n\t            args[name] = value;\r\n\t        }\r\n\t        return args;\r\n\t    }\r\n\t};\r\n\r\n\tclient.tools.toggleLoadingIcon(); // Show loading icon\r\n    var query = client.tools.urlArgs(); // Url Queries as an object\r\n\r\n\tclient.on('connect', function () {\r\n        client.tools.toggleLoadingIcon(); // Hide loading icon\r\n\t\tclient.emit('login',{\r\n\t\t\tusername: query.username || \"example@example.com\"\r\n\t\t})\r\n\r\n    });"],[0,"\r\n})"]],"start1":17,"start2":17,"length1":3694,"length2":8}]],"length":28,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359775098486,"patch":[[{"diffs":[[0," {\r\n    "],[1,"var app = $('body');\r\n    var client = {};\r\n    \r\n    client."],[0,"\r\n});\t\t"]],"start1":13,"start2":13,"length1":15,"length2":76}]],"length":89,"saved":false}
{"ts":1359775179680,"patch":[[{"diffs":[[0," client."],[1,"welcomeMessage = (function(){\r\n       var div = $('<div />')\r\n       return div\r\n    });"],[0,"\r\n});\t\t"]],"start1":74,"start2":74,"length1":15,"length2":103}]],"length":177,"saved":false}
{"ts":1359775184059,"patch":[[{"diffs":[[0,"v />')\r\n"],[1,"       \r\n"],[0,"       r"]],"start1":136,"start2":136,"length1":16,"length2":25},{"diffs":[[0,"turn div"],[1,";"],[0,"\r\n    })"]],"start1":162,"start2":162,"length1":16,"length2":17}]],"length":187,"saved":false}
{"ts":1359775255007,"patch":[[{"diffs":[[0,">')\r\n       "],[1,"     .attr('id')\r\n        "],[0,"\r\n       ret"]],"start1":139,"start2":139,"length1":24,"length2":50}]],"length":213,"saved":false}
